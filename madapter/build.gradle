apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    testCompile 'junit:junit:4.12'
//    compile 'com.android.support:appcompat-v7:23.4.0'
}
tasks.withType(GroovyCompile) {
    groovyOptions.encoding = "MacRoman"
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

ext {

    bintrayRepo = "maven"//bintray上使用的库
    bintrayName = "MAdapter"//bintray上创建的应用名字
    developerId = 'bgtal'//bintray上的用户名
    developerName = 'Ssnb'//开发者名字
    developerEmail = 'Blq_ssnb@outlook.com'//开发者邮箱

    publishedGroupId = "com.blq.ssnb"//项目前缀
    libraryName = "madapter"//lib的名字
    libraryVersion ='0.0.7'//项目版本
    artifact = "madapter"//

    libraryDescription = ""//对项目的描述
    siteUrl = 'https://github.com/Bgtal/MyAdapterDemo'//github上的路径
    gitUrl = 'https://github.com/Bgtal/MyAdapterDemo.git'//github项目的git地址

    //协议什么的
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId

install {
    repositories.mavenInstaller{
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
/**
 * 配置javadoc的编码格式
 */
javadoc {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/8/docs/api"
        title artifact
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())//获取local.properties中的配置文件

bintray {
    user = properties.getProperty("bintray.user")//local.properties中的user属性用户名
    key = properties.getProperty("bintray.apikey")//local.properties中的apikey属性，这个需要保密从bintray中获得

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")//bintray登陆的密码
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
